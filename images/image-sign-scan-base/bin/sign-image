#!/bin/bash

sleep 5

echo "start signing"

oc login https://kubernetes.default.svc.cluster.local --certificate-authority=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt --token=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token) > /dev/null 2>&1 

echo "logged into ocp"

PUSH_TYPE=${PUSH_TYPE:=atomic}

echo "test"

if [ "${PUSH_TYPE}" == "atomic" ]; then

  IMAGE_SIGNATURE_EXISTS=$(oc get images ${IMAGE_DIGEST} -o json | jq -r 'has("signatures")')
  if [ "${IMAGE_SIGNATURE_EXISTS}" == "true" ]; then
    echo "Signature exists on image. Skipping signing"
    exit 0
  fi

fi

echo "1"
SA_FULLNAME=$(oc whoami)
echo "2"
SA_NAME="${SA_FULLNAME##*:}"
echo "3"
NAMESPACE=$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace)
echo "4"
SA_JSON=$(oc get sa -n $NAMESPACE $SA_NAME -o json)
echo "5"
DOCKERCFG_SECRET_NAME=$(echo "${SA_JSON}" | jq -r ".imagePullSecrets[] | select( .name | contains(\"${SA_NAME}-dockercfg\")).name")
echo "6"
DOCKERCFG=$(oc get secret -n $NAMESPACE $DOCKERCFG_SECRET_NAME -o json | jq -r ".data[] | select(\".dockercfg\")" | base64 -d)
echo "7"


if [ -z ${IMAGE} ]; then
  echo "No Image Specified for Signing"
  exit 1
fi

sleep 5

echo "starting to pull image"

podman pull $IMAGE

echo "finished pulling image"

if [ "${PUSH_TYPE}" == "atomic" ]; then

  REGISTRY_HOST=${IMAGE%%/*}
  REGISTRY_CONTENTS=$(echo "$DOCKERCFG" | jq -r ". | .[\"$REGISTRY_HOST\"]")

  if [ "$REGISTRY_CONTENTS" != "null" ]; then
    USERNAME=$(echo $REGISTRY_CONTENTS | jq -r .username)
    PASSWORD=$(echo $REGISTRY_CONTENTS | jq -r .password)
    USERNAME_PARAM="--username $USERNAME"
    PASSWORD_PARAM="--password $PASSWORD"
    podman login -u $USERNAME -p $PASSWORD $REGISTRY_HOST
  fi

  atomic push --insecure --type ${PUSH_TYPE} --sign-by $SIGNBY $USERNAME_PARAM $PASSWORD_PARAM $IMAGE

else

  podman image sign --sign-by $SIGNBY -d /var/lib/containers/sigstore  $IMAGE

fi

podman rmi -f $IMAGE
